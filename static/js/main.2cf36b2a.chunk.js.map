{"version":3,"sources":["Instance.js","routes/Auth.js","routes/Home.js","components/RollList.js","routes/RollSheet.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","newFirebase","authService","auth","db","firestore","Auth","onLoginClick","event","a","name","target","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","style","paddingTop","Grid","columns","stackable","centered","verticalAlign","Column","computer","mobile","widescreen","Header","as","icon","textAlign","size","color","Icon","Content","Button","Group","onClick","Or","Home","userObj","useState","roll","setRoll","displayName","userName","SetUserName","secret","setSecret","onMsg","setMsg","onCompleteClick","preventDefault","rollObj","text","createdAt","Date","now","creator","uid","collection","add","setTimeout","position","left","top","transform","Message","marginTop","header","content","Image","src","photoUrl","avatar","spaced","bordered","fontSize","Form","TextArea","height","width","backgroundColor","borderWidth","resize","type","value","placeholder","onChange","maxLength","required","float","Popup","trigger","animated","toggle","active","prev","visible","hidden","disabled","RollList","isOwner","editable","setEditable","originText","setOriginText","onDeleteClick","window","confirm","doc","id","delete","onUpdateClick","update","onEditClick","Card","floated","circular","Meta","Description","rows","border","outline","extra","className","basic","RollSheet","rolls","setRolls","count","setCount","useEffect","orderBy","limit","onSnapshot","snap","arrRoll","docs","map","data","numOfContents","firstVisible","get","then","Container","doubling","Navigation","activeItem","setActiveItem","history","useHistory","onItemClick","e","Menu","widths","fixed","Item","Link","to","signOut","push","AppRouter","isLoggedIn","exact","path","App","setIsLoggedIn","setUserObj","isLoaded","setIsLoaded","onAuthStateChanged","user","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf36b2a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUR_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const newFirebase = firebase;\nexport const authService = firebase.auth();\nexport const db = firebase.firestore();\n","import React from \"react\";\nimport { authService, newFirebase } from \"../Instance\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Icon, Header, Image, Grid } from \"semantic-ui-react\";\nimport \"../css/Auth.css\";\n\nconst Auth = () => {\n  const onLoginClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n\n    if (name === \"google\") {\n      provider = new newFirebase.auth.GoogleAuthProvider();\n    } else if (name === \"facebook\") {\n      provider = new newFirebase.auth.FacebookAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div style={{ paddingTop: \"20%\"}}>\n      <Grid\n        columns=\"1\"\n        stackable\n        centered\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column computer=\"4\" mobile=\"4\" widescreen=\"4\">\n          <Header as=\"h2\" icon textAlign=\"center\" size=\"huge\" color=\"yellow\">\n            <Icon name=\"graduation cap\" />\n            <Header.Content>Start with</Header.Content>\n          </Header>\n\n          <Button.Group size=\"huge\">\n            <Button name=\"google\" onClick={onLoginClick} color=\"google plus\">\n              <Icon name=\"google\" /> Google\n            </Button>\n            <Button.Or />\n            <Button name=\"facebook\" onClick={onLoginClick} color=\"facebook\">\n              <Icon name=\"facebook\" /> Facebook\n            </Button>\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../Instance\";\nimport {\n  Form,\n  TextArea,\n  Modal,\n  Image,\n  Icon,\n  Button,\n  Popup,\n  Message,\n} from \"semantic-ui-react\";\n\nconst Home = ({ userObj }) => {\n  const [roll, setRoll] = useState(\"\");\n  const [userName, SetUserName] = useState(userObj.displayName);\n  const [secret, setSecret] = useState(false);\n  const [onMsg, setMsg] = useState(false);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setRoll(value);\n  };\n\n  const onCompleteClick = async (event) => {\n    event.preventDefault();\n\n    const rollObj = {\n      text: roll,\n      createdAt: Date.now(),\n      creator: userObj.uid,\n      displayName: userName,\n    };\n\n    await db.collection(\"rolls\").add(rollObj);\n\n    setRoll(\"\");\n\n    setMsg(true);\n    setTimeout(() => {\n      setMsg(false);\n    }, 5000);\n  };\n\n  const secretToggle = () => {\n    setSecret((prev) => !prev);\n\n    if (secret === false) {\n      SetUserName(\"Anonymous\");\n    } else if (secret === true) {\n      SetUserName(userObj.displayName);\n    }\n  };\n\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        left: \"50%\",\n        top: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n      }}\n    >\n      {onMsg && (\n        <Message\n          style={{ marginTop: 100 }}\n          icon=\"check circle outline\"\n          color=\"green\"\n          header=\"Thank you!\"\n          content=\"Your message has been posted\"\n        />\n      )}\n      <Image\n        src={`${userObj.photoUrl}`}\n        avatar\n        spaced=\"right\"\n        bordered\n        size=\"mini\"\n      ></Image>\n      <span style={{ color: \"white\", fontSize: 17 }}>\n        {userObj.displayName}\n      </span>\n\n      <Form style={{ paddingTop: 15 }}>\n        <TextArea\n          style={{\n            height: 350,\n            width: 400,\n            fontSize: 17,\n            backgroundColor: \"transparent\",\n            borderWidth: 5,\n            resize: \"none\",\n          }}\n          type=\"text\"\n          value={roll}\n          placeholder=\"Any word\"\n          onChange={onChange}\n          maxLength={280}\n          required\n        />\n      </Form>\n\n      <div style={{ paddingTop: 15, float: \"right\" }}>\n        <Popup\n          content={secret ? \"Show yourself\" : \"Hide yourself\"}\n          trigger={\n            <Button\n              animated=\"fade\"\n              toggle\n              active={secret}\n              onClick={secretToggle}\n            >\n              <Button.Content visible>\n                <Icon name={secret ? \"lock\" : \"lock open\"}></Icon>\n              </Button.Content>\n              <Button.Content hidden>\n                <Icon name={secret ? \"lock\" : \"lock open\"}></Icon>\n              </Button.Content>\n            </Button>\n          }\n        ></Popup>\n\n        <Button\n          disabled={roll ? false : true}\n          onClick={onCompleteClick}\n          color=\"green\"\n        >\n          Complete\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { db } from \"../Instance\";\nimport { Card, Image, Button, TextArea, Grid } from \"semantic-ui-react\";\n\nconst RollList = ({ userObj, rollObj, isOwner }) => {\n  const [editable, setEditable] = useState(false);\n  const [originText, setOriginText] = useState(rollObj.text);\n\n  const onDeleteClick = async () => {\n    const isOk = window.confirm(\"Are you sure you want to permanently remove this item?\");\n    if (isOk) {\n      await db.collection(\"rolls\").doc(`${rollObj.id}`).delete();\n    }\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setOriginText(value);\n  };\n\n  const onUpdateClick = async (event) => {\n    event.preventDefault();\n\n    await db.doc(`rolls/${rollObj.id}`).update({ text: originText });\n\n    setEditable(false);\n  };\n\n  const onEditClick = () => {\n    setEditable((prev) => !prev);\n    setOriginText(rollObj.text);\n  };\n\n  return (\n    <>\n      {editable ? (\n        <>\n          <Card.Group>\n            <Card>\n              <Card.Content>\n                <Image\n                  floated=\"right\"\n                  size=\"mini\"\n                  src={`${userObj.photoUrl}`}\n                  circular\n                />\n                <Card.Header>{rollObj.displayName}</Card.Header>\n                <Card.Meta>{rollObj.createdAt}</Card.Meta>\n                <Card.Description>\n                  <TextArea\n                    rows=\"5\"\n                    style={{\n                      width: 260,\n                      height: 50,\n                      border: \"none\",\n                      resize: \"none\",\n                      outline: 0,\n                    }}\n                    type=\"text\"\n                    placeholder=\"Edit text\"\n                    value={originText}\n                    onChange={onChange}\n                    maxLength={280}\n                    required\n                  ></TextArea>\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {isOwner && (\n                  <div className=\"ui two buttons\">\n                    <Button onClick={onEditClick}>cancel</Button>\n                    <Button\n                      onClick={onUpdateClick}\n                      value=\"update\"\n                      color=\"green\"\n                    >\n                      update\n                    </Button>\n                  </div>\n                )}\n              </Card.Content>\n            </Card>\n          </Card.Group>\n          {/* <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit text\"\n              value={originText}\n              onChange={onChange}\n              maxLength={280}\n              required\n            ></input>\n            <Button onClick={onEditClick}>cancel</Button>\n            <Button type=\"submit\" value=\"update\" color=\"green\">update</Button>\n          </form> */}\n        </>\n      ) : (\n        <>\n          <Card.Group>\n            <Card>\n              <Card.Content>\n                <Image\n                  floated=\"right\"\n                  size=\"mini\"\n                  src={`${userObj.photoUrl}`}\n                  circular\n                />\n                <Card.Header>{rollObj.displayName}</Card.Header>\n                <Card.Meta>{rollObj.createdAt}</Card.Meta>\n                <Card.Description content={rollObj.text}></Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {isOwner && (\n                  <div className=\"ui two buttons\">\n                    <Button onClick={onDeleteClick} basic color=\"red\">\n                      Delete\n                    </Button>\n                    <Button onClick={onEditClick} basic color=\"yellow\">\n                      Edit\n                    </Button>\n                  </div>\n                )}\n              </Card.Content>\n            </Card>\n          </Card.Group>\n\n          {/* <h4>{rollObj.text}</h4>\n          {isOwner && (\n            <>\n              <button onClick={onEditClick}>edit</button>\n              <button onClick={onDeleteClick}>delete</button>\n            </>\n          )} */}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default RollList;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../Instance\";\nimport RollList from \"../components/RollList\";\nimport { Button, Container, Grid, Icon } from \"semantic-ui-react\";\n\nconst RollSheet = ({ userObj }) => {\n  const [rolls, setRolls] = useState([]);\n  const [count, setCount] = useState(8);\n\n  useEffect(() => {\n    db.collection(\"rolls\")\n      .orderBy(\"createdAt\", \"desc\")\n      .limit(count)\n      .onSnapshot((snap) => {\n        const arrRoll = snap.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setRolls(arrRoll);\n      });\n  }, []);\n\n  const numOfContents = async () => {\n    const firstVisible = db\n      .collection(\"rolls\")\n      .orderBy(\"createdAt\", \"desc\")\n      .limit(count);\n\n    await firstVisible.get().then((snap) => {\n\n      db.collection(\"rolls\")\n        .orderBy(\"createdAt\", \"desc\")\n        .limit(count * 2)\n        .onSnapshot((snap) => {\n          const arrRoll = snap.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n          setRolls(arrRoll);\n        });\n      setCount(count * 2);\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <Grid columns={4} doubling stackable style={{ paddingTop: 100 }}>\n          {rolls.map((roll) => (\n            <Grid.Column key={roll.id}>\n              <RollList\n                key={roll.id}\n                rollObj={roll}\n                isOwner={userObj.uid === roll.creator}\n                userObj={userObj}\n              />\n            </Grid.Column>\n          ))}\n        </Grid>\n        <Grid columns={8} doubling stackable centered>\n          <Grid.Column>\n            <Button\n              onClick={numOfContents}\n              animated=\"vertical\"\n              circular\n              color=\"blue\"\n            >\n              <Button.Content visible>More</Button.Content>\n              <Button.Content hidden>\n                <Icon name=\"arrow circle down\"/>\n              </Button.Content>\n            </Button>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default RollSheet;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { authService } from \"../Instance\";\n\nconst Navigation = ({ userObj }) => {\n  const [activeItem, setActiveItem] = useState(\"Home\");\n\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onItemClick = (e, { name }) => setActiveItem({ name }.name);\n\n  return (\n    <Menu size=\"large\" widths=\"3\" color=\"yellow\" fixed=\"top\">\n      <Menu.Item\n        as={Link}\n        to=\"/\"\n        name=\"Home\"\n        active={activeItem === \"Home\"}\n        onClick={onItemClick}\n      />\n      <Menu.Item\n        as={Link}\n        to=\"/RollSheet\"\n        name=\"RollSheet\"\n        active={activeItem === \"RollSheet\"}\n        onClick={onItemClick}\n      />\n\n      <Menu.Item onClick={onLogOutClick}>\n        <Icon name=\"log out\" size=\"large\" />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport RollSheet from \"../routes/RollSheet\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <>\n      <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n          {isLoggedIn ? (\n            <>\n              <Route exact path=\"/\">\n                <Home userObj={userObj}></Home>\n              </Route>\n              <Route exact path=\"/RollSheet\">\n                <RollSheet userObj={userObj} />\n              </Route>\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/\">\n                <Auth />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import { useState, useEffect } from \"react\";\nimport { authService } from \"../Instance\";\nimport AppRouter from \"./AppRouter\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          photoUrl: user.photoURL,\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div>\n      {isLoaded ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"Loading...\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}