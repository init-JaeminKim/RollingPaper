{"version":3,"sources":["Instance.js","routes/Auth.js","routes/Home.js","components/RollList.js","routes/RollSheet.js","components/Navigation.js","components/AppRouter.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","newFirebase","authService","auth","db","firestore","Auth","onLoginClick","event","a","name","target","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","style","paddingTop","Grid","columns","stackable","centered","verticalAlign","Column","computer","mobile","widescreen","Header","as","icon","textAlign","size","color","Icon","Content","Button","Group","onClick","Or","Home","userObj","useState","roll","setRoll","displayName","userName","SetUserName","secret","setSecret","onMsg","setMsg","onCompleteClick","preventDefault","rollObj","text","createdAt","moment","format","creator","uid","photoUrl","collection","add","setTimeout","Message","marginTop","header","content","Image","src","avatar","spaced","bordered","fontSize","Form","TextArea","height","width","backgroundColor","borderWidth","resize","type","value","placeholder","onChange","maxLength","required","Popup","trigger","animated","toggle","active","prev","visible","hidden","disabled","RollList","isOwner","editable","setEditable","originText","setOriginText","React","open","setOpen","onDeleteClick","doc","id","delete","onUpdateClick","update","onEditClick","Card","floated","circular","Meta","Description","rows","border","outline","extra","className","Modal","basic","onClose","onOpen","Actions","inverted","RollSheet","rolls","setRolls","count","setCount","useEffect","where","limit","onSnapshot","snap","arrRoll","docs","map","data","numOfContents","firstVisible","orderBy","get","then","Container","doubling","Navigation","activeItem","setActiveItem","history","useHistory","onItemClick","e","Menu","widths","fixed","Item","Link","to","signOut","push","AppRouter","isLoggedIn","exact","path","App","setIsLoggedIn","setUserObj","isLoaded","setIsLoaded","onAuthStateChanged","user","photoURL","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec90cd9.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCc1jz1omi_w6uOYY0fV2CVLHLEBhoRSfg\",\n  authDomain: \"rollingpapers-01.firebaseapp.com\",\n  projectId: \"rollingpapers-01\",\n  storageBucket: \"rollingpapers-01.appspot.com\",\n  messagingSenderId: \"304299998135\",\n  appId: \"1:304299998135:web:faf3ddb5340bbd4153c632\",\n  measurementId: \"G-3PP7X8G4MZ\"\n  /* apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID, */\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport const newFirebase = firebase;\nexport const authService = firebase.auth();\nexport const db = firebase.firestore();\n","import React from \"react\";\nimport { authService, newFirebase } from \"../Instance\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { Button, Icon, Header, Grid } from \"semantic-ui-react\";\nimport \"../css/Auth.css\";\n\nconst Auth = () => {\n  const onLoginClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n\n    let provider;\n\n    if (name === \"google\") {\n      provider = new newFirebase.auth.GoogleAuthProvider();\n    } else if (name === \"facebook\") {\n      provider = new newFirebase.auth.FacebookAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div style={{ paddingTop: \"20%\" }}>\n      <Grid columns=\"1\" stackable centered verticalAlign=\"middle\">\n        <Grid.Column computer=\"4\" mobile=\"4\" widescreen=\"4\">\n          <Header as=\"h2\" icon textAlign=\"center\" size=\"huge\" color=\"yellow\">\n            <Icon name=\"compass\" />\n            <Header.Content>Start with</Header.Content>\n          </Header>\n\n          <Button.Group size=\"huge\">\n            <Button name=\"google\" onClick={onLoginClick} color=\"google plus\">\n              <Icon name=\"google\" /> Google\n            </Button>\n            <Button.Or />\n            <Button name=\"facebook\" onClick={onLoginClick} color=\"facebook\">\n              <Icon name=\"facebook\" /> Facebook\n            </Button>\n          </Button.Group>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../Instance\";\nimport {\n  Form,\n  TextArea,\n  Image,\n  Icon,\n  Button,\n  Popup,\n  Message,\n  Grid,\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst Home = ({ userObj }) => {\n  const [roll, setRoll] = useState(\"\");\n  const [userName, SetUserName] = useState(userObj.displayName);\n  const [secret, setSecret] = useState(false);\n  const [onMsg, setMsg] = useState(false);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setRoll(value);\n  };\n\n  const onCompleteClick = async (event) => {\n    event.preventDefault();\n\n    const rollObj = {\n      text: roll,\n      createdAt: moment().format(\"MMM Do YY\"),\n      creator: userObj.uid,\n      displayName: userName,\n      photoUrl: userObj.photoUrl,\n    };\n\n    await db.collection(\"rolls\").add(rollObj);\n\n    setRoll(\"\");\n\n    setMsg(true);\n    setTimeout(() => {\n      setMsg(false);\n    }, 5000);\n  };\n\n  const secretToggle = () => {\n    setSecret((prev) => !prev);\n\n    if (secret === false) {\n      SetUserName(\"Anonymous\");\n    } else if (secret === true) {\n      SetUserName(userObj.displayName);\n    }\n  };\n\n  return (\n    <div style={{ paddingTop: \"10%\" }}>\n      <Grid columns={3} centered>\n        <Grid.Column>\n          {onMsg && (\n            <Message\n              style={{ marginTop: 100 }}\n              icon=\"check circle outline\"\n              color=\"green\"\n              header=\"Thank you!\"\n              content=\"Your message has been posted\"\n            />\n          )}\n          <Image\n            src={`${userObj.photoUrl}`}\n            avatar\n            spaced=\"right\"\n            bordered\n            size=\"mini\"\n          ></Image>\n          <span style={{ color: \"white\", fontSize: 17 }}>\n            {userObj.displayName}\n          </span>\n\n          <Form style={{ paddingTop: 15 }}>\n            <TextArea\n              style={{\n                height: 350,\n                width: 400,\n                fontSize: 17,\n                backgroundColor: \"transparent\",\n                borderWidth: 5,\n                resize: \"none\",\n              }}\n              type=\"text\"\n              value={roll}\n              placeholder=\"Any word\"\n              onChange={onChange}\n              maxLength={280}\n              required\n            />\n          </Form>\n          <Grid.Column style={{ paddingTop: 15 }}>\n            <Popup\n              content={secret ? \"Show yourself\" : \"Hide yourself\"}\n              trigger={\n                <Button\n                  animated=\"fade\"\n                  toggle\n                  active={secret}\n                  onClick={secretToggle}\n                >\n                  <Button.Content visible>\n                    <Icon name={secret ? \"lock\" : \"lock open\"}></Icon>\n                  </Button.Content>\n                  <Button.Content hidden>\n                    <Icon name={secret ? \"lock\" : \"lock open\"}></Icon>\n                  </Button.Content>\n                </Button>\n              }\n            ></Popup>\n\n            <Button\n              disabled={roll ? false : true}\n              onClick={onCompleteClick}\n              color=\"green\"\n            >\n              Complete\n            </Button>\n          </Grid.Column>\n        </Grid.Column>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { db } from \"../Instance\";\nimport {\n  Card,\n  Image,\n  Button,\n  TextArea,\n  Icon,\n  Modal,\n  Header,\n} from \"semantic-ui-react\";\n\nconst RollList = ({ rollObj, isOwner }) => {\n  const [editable, setEditable] = useState(false);\n  const [originText, setOriginText] = useState(rollObj.text);\n  const [open, setOpen] = React.useState(false);\n\n  const onDeleteClick = async () => {\n    db.collection(\"rolls\").doc(`${rollObj.id}`).delete();\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n\n    setOriginText(value);\n  };\n\n  const onUpdateClick = async (event) => {\n    event.preventDefault();\n\n    await db.doc(`rolls/${rollObj.id}`).update({ text: originText });\n\n    setEditable(false);\n  };\n\n  const onEditClick = () => {\n    setEditable((prev) => !prev);\n    setOriginText(rollObj.text);\n  };\n\n  return (\n    <>\n          {editable ? (\n              <Card.Group>\n                <Card>\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={`${rollObj.photoUrl}`}\n                      circular\n                    />\n                    <Card.Header>{rollObj.displayName}</Card.Header>\n                    <Card.Meta>{rollObj.createdAt}</Card.Meta>\n                    <Card.Description>\n                      <TextArea\n                        rows=\"5\"\n                        style={{\n                          width: 260,\n                          height: 50,\n                          border: \"none\",\n                          resize: \"none\",\n                          outline: 0,\n                        }}\n                        type=\"text\"\n                        placeholder=\"Edit text\"\n                        value={originText}\n                        onChange={onChange}\n                        maxLength={280}\n                        required\n                      ></TextArea>\n                    </Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    <div className=\"ui two buttons\">\n                      <Button onClick={onEditClick}>cancel</Button>\n                      <Button\n                        onClick={onUpdateClick}\n                        value=\"update\"\n                        color=\"green\"\n                      >\n                        update\n                      </Button>\n                    </div>\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n          ) : (\n              <Card.Group>\n                <Card>\n                  <Card.Content>\n                    <Image\n                      floated=\"right\"\n                      size=\"mini\"\n                      src={`${rollObj.photoUrl}`}\n                      circular\n                    />\n                    <Card.Header>{rollObj.displayName}</Card.Header>\n                    <Card.Meta>{rollObj.createdAt}</Card.Meta>\n                    <Card.Description content={rollObj.text}></Card.Description>\n                  </Card.Content>\n                  <Card.Content extra>\n                    {isOwner && (\n                      <div className=\"ui two buttons\">\n                        <Modal\n                          basic\n                          onClose={() => setOpen(false)}\n                          onOpen={() => setOpen(true)}\n                          open={open}\n                          size=\"small\"\n                          trigger={\n                            <Button basic color=\"red\">\n                              Delete\n                            </Button>\n                          }\n                        >\n                          <Header icon>\n                            <Icon name=\"trash alternate\" />\n                            Delete Messages\n                          </Header>\n                          <Modal.Content>\n                            <p style={{ textAlign: \"center\", fontSize: 15 }}>\n                              \"Are you sure you want to permanently remove this\n                              item?\"\n                            </p>\n                          </Modal.Content>\n                          <Modal.Actions>\n                            <Button\n                              basic\n                              color=\"red\"\n                              inverted\n                              onClick={() => setOpen(false)}\n                            >\n                              <Icon name=\"remove\" /> No\n                            </Button>\n                            <Button\n                              color=\"green\"\n                              inverted\n                              onClick={onDeleteClick}\n                            >\n                              <Icon name=\"checkmark\" /> Yes\n                            </Button>\n                          </Modal.Actions>\n                        </Modal>\n                        <Button onClick={onEditClick} basic color=\"yellow\">\n                          Edit\n                        </Button>\n                      </div>\n                    )}\n                  </Card.Content>\n                </Card>\n              </Card.Group>\n          )}\n    </>\n  );\n};\n\nexport default RollList;\n","import React, { useEffect, useState } from \"react\";\nimport { db } from \"../Instance\";\nimport RollList from \"../components/RollList\";\nimport { Button, Container, Grid, Icon } from \"semantic-ui-react\";\n\nconst RollSheet = ({ userObj }) => {\n  const [rolls, setRolls] = useState([]);\n  const [count, setCount] = useState(8);\n\n  useEffect(() => {\n    db.collection(\"rolls\")\n      .where(\"creator\", \"==\", userObj.uid)\n      .limit(count)\n      .onSnapshot((snap) => {\n        const arrRoll = snap.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n        setRolls(arrRoll);\n      });\n  }, []);\n\n  const numOfContents = async () => {\n    const firstVisible = db\n      .collection(\"rolls\")\n      .orderBy(\"createdAt\", \"desc\")\n      .limit(count);\n\n    await firstVisible.get().then((snap) => {\n      db.collection(\"rolls\")\n        .orderBy(\"createdAt\", \"desc\")\n        .limit(count * 2)\n        .onSnapshot((snap) => {\n          const arrRoll = snap.docs.map((doc) => ({\n            id: doc.id,\n            ...doc.data(),\n          }));\n          setRolls(arrRoll);\n        });\n      setCount(count * 2);\n    });\n  };\n\n  return (\n    <>\n      <div style={{ paddingTop: \"8%\" }}>\n        <Container>\n          <Grid columns={4} doubling stackable>\n            {rolls.map((roll) => (\n              <Grid.Column key={roll.id}>\n                <RollList\n                  key={roll.id}\n                  rollObj={roll}\n                  isOwner={userObj.uid === roll.creator}\n                  userObj={userObj}\n                />\n              </Grid.Column>\n            ))}\n          </Grid>\n          <Grid columns={8} doubling stackable centered>\n            <Grid.Column>\n              <Button\n                onClick={numOfContents}\n                animated=\"vertical\"\n                circular\n                color=\"blue\"\n              >\n                <Button.Content visible>More</Button.Content>\n                <Button.Content hidden>\n                  <Icon name=\"arrow circle down\" />\n                </Button.Content>\n              </Button>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default RollSheet;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { authService } from \"../Instance\";\n\nconst Navigation = () => {\n  const [activeItem, setActiveItem] = useState(\"Home\");\n\n  const history = useHistory();\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/RollingPaper\");\n  };\n\n  const onItemClick = (e, { name }) => setActiveItem({ name }.name);\n\n  return (\n    <Menu size=\"large\" widths=\"3\" color=\"yellow\" fixed=\"top\">\n      <Menu.Item\n        as={Link}\n        to=\"/RollingPaper\"\n        name=\"Home\"\n        active={activeItem === \"Home\"}\n        onClick={onItemClick}\n      />\n      <Menu.Item\n        as={Link}\n        to=\"/RollingPaper/#/RollSheet\"\n        name=\"RollSheet\"\n        active={activeItem === \"RollSheet\"}\n        onClick={onItemClick}\n      />\n\n      <Menu.Item onClick={onLogOutClick}>\n        <Icon name=\"log out\" size=\"large\" />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Auth from \"../routes/Auth\";\nimport Home from \"../routes/Home\";\nimport RollSheet from \"../routes/RollSheet\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n  return (\n    <>\n      <Router>\n        {isLoggedIn && <Navigation userObj={userObj} />}\n        <Switch>\n          {isLoggedIn ? (\n            <>\n              <Route exact path=\"/RollingPaper\">\n                <Home userObj={userObj}></Home>\n              </Route>\n              <Route exact path=\"/RollingPaper/#/RollSheet\">\n                <RollSheet userObj={userObj} />\n              </Route>\n            </>\n          ) : (\n            <>\n              <Route exact path=\"/RollingPaper\">\n                <Auth />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default AppRouter;\n","import { useState, useEffect } from \"react\";\nimport { authService } from \"../Instance\";\nimport AppRouter from \"./AppRouter\";\n\nconst App = () => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          photoUrl: user.photoURL,\n        });\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n        setUserObj(null);\n      }\n      setIsLoaded(true);\n    });\n  }, []);\n\n  return (\n    <div>\n      {isLoaded ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"Loading...\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}